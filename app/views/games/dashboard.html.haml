.navbar-fixed-top{style: "background-color:black;", id: @game.id}
  .row
    .col-md-4
      %center
        .teams_name=@game.home.name
      .well-md
        .row
          .col-md-12
            %center
              .score#score_home{'data-value'=>0} 00
        .row
          .col-md-2
            %center.dashboard_labels
              T.O.L.:
          .col-md-1
            %center
              .indicator_small 0
          .col-md-3
            .btn-group-xs
              %button.btn.btn-default -
              %button.btn.btn-default +
          .col-md-2
            %center.dashboard_labels
              Fouls:
          .col-md-1
            %center
              #home_fouls.indicator_small 0
          .col-md-1
            .btn-group-xs
              %button.reset_fouls.btn.btn-default.glyphicon.glyphicon-refresh
    .col-md-4
      %center
        .row
          .col-md-3.col-md-offset-3
            %center
              .teams_name Period:
          .col-md-1
            %center
              .indicator_small
                #period 1
          .col-md-2
            .btn-group-xs
              %button.btn.btn-default.minus_period -
              %button.btn.btn-default.plus_period +
        .row
          .col-md-12
            .clock#timer 10:00
            %button.minus_sec
              %span.glyphicon.glyphicon-step-backward.controls
            %button.play.controls
              %span.glyphicon.glyphicon-play.controls
            %button.pause
              %span.glyphicon.glyphicon-pause.controls
            %button.plus_sec
              %span.glyphicon.glyphicon-step-forward.controls
            %button.horn
              %span.glyphicon.glyphicon-volume-up.controls
        .row
          .col-md-1
            %center
              %span.poss
                %a.dashboard_indicator_on.glyphicon.glyphicon-arrow-left
          .col-md-2
            %center
              .dashboard_labels Poss
          .col-md-1
            %center
              %span.poss
                %a.dashboard_indicator_off.glyphicon.glyphicon-arrow-right
          .col-md-4
            %center
              %span
                %a.glyphicon.glyphicon-stats{'data-toggle'=>'modal', 'data-target'=>'#stats.bs-example-modal-lg'}
          .col-md-1
            %center
              %span.bonus
                %a.dashboard_indicator_on.glyphicon.glyphicon-arrow-left
          .col-md-2
            %center
              .dashboard_labels Bonus
          .col-md-1
            %center
              %span.bonus
                %a.dashboard_indicator_off.glyphicon.glyphicon-arrow-right
    .col-md-4
      %center
        .teams_name=@game.visit.name
      .well-md
        .row
          .col-md-12
            %center
              .score#score_visit{'data-value'=>0} 00
        .row
          .col-md-2
            %center.dashboard_labels
              T.O.L.:
          .col-md-1
            %center
              .indicator_small 0
          .col-md-3
            .btn-group-xs
              %button.btn.btn-default -
              %button.btn.btn-default +
          .col-md-2
            %center.dashboard_labels
              Fouls:
          .col-md-1
            %center
              #visit_fouls.indicator_small 0
          .col-md-1
            .btn-group-xs
              %button.reset_fouls.btn.btn-default.glyphicon.glyphicon-refresh
.container-fluid{style: "background-color: black; margin-top: 120px;"}
  .row
    .col-md-6#home_players_in
      - @game.home.players.each do |player|
        .row.player_well{id: player.id, 'data-team-id'=>player.team_id, 'data-player-name'=>player.name}
          .col-md-1
            %button.dashboard_indicator_off.glyphicon.glyphicon-retweet{'data-team-id'=>player.team_id, 'data-player-id'=> player.id, 'data-toggle'=>'modal', 'data-target'=>'#change_player.bs-example-modal-lg'}
            %button.dashboard_indicator_off.glyphicon.glyphicon-check{'data-player-id'=> player.id}
            %button.dashboard_indicator_off.glyphicon.glyphicon-transfer{'data-player-id'=> player.id}
          .col-md-4
            .player_number
              %input.player_number{type:'text', size:2, style:"background-color:black", pattern: '\d{1,2}', 'data-player-name'=> player.name,  'data-player-id'=> player.id, 'data-team-id'=> player.team_id}
            .player_name= player.name
          .col-md-4
            .row
              .col-md-2.btn-group-vertical{role: 'group'}
                .btn-group-xs{role: 'group', style: 'display:none'}
                  %button.btn.btn-default.sub_points{'data-player-id'=> player.id, 'data-points'=> 1, 'data-courtside'=>'home'} -F
                  %button.btn.btn-default.sub_points{'data-player-id'=> player.id, 'data-points'=> 2, 'data-courtside'=>'home'} -2
                  %button.btn.btn-default.sub_points{'data-player-id'=> player.id, 'data-points'=> 3, 'data-courtside'=>'home'} -3
              .col-md-5.col-md-offset-1
                .dashboard_labels
                  %center
                    Points
                    .player_points
                      %div{'data-points'=> 0, id: "points_player_#{player.id}"} 0
              .col-md-2.btn-group-vertical{role: 'group'}
                .btn-group-xs{role: 'group'}
                  %button.btn.btn-default.add_points{'data-player-id'=> player.id, 'data-points'=> 1, 'data-courtside'=>'home'} +F
                  %button.btn.btn-default.add_points{'data-player-id'=> player.id, 'data-points'=> 2, 'data-courtside'=>'home'} +2
                  %button.btn.btn-default.add_points{'data-player-id'=> player.id, 'data-points'=> 3, 'data-courtside'=>'home'} +3
          .col-md-3
            .row
              .col-md-2
                .btn-group-xs
                  %button.btn.btn-default.sub_home_player_foul{'data-player-id'=> player.id} -1
              .col-md-5.col-md-offset-1
                .dashboard_labels
                  %center
                    Fouls
                    .player_fouls
                      %div{'data-fouls'=> 0, id: "fouls_player_#{player.id}"} 0
              .col-md-2
                .btn-group-xs
                  %button.btn.btn-default.add_home_player_foul{'data-player-id'=> player.id} +1
    .col-md-6#visit_players_in
      - @game.visit.players.each do |player|
        .row.player_well{id: player.id, 'data-team-id'=>player.team_id, 'data-player-name'=>player.name}
          .col-md-1
            %button.dashboard_indicator_off.glyphicon.glyphicon-retweet{'data-team-id'=>player.team_id, 'data-player-id'=> player.id, 'data-toggle'=>'modal', 'data-target'=>'#change_player.bs-example-modal-lg'}
            %button.dashboard_indicator_off.glyphicon.glyphicon-check{'data-player-id'=> player.id}
            %button.dashboard_indicator_off.glyphicon.glyphicon-transfer{'data-player-id'=> player.id}
          .col-md-4
            .player_number
              %input.player_number{type:'text', size:2, style:"background-color:black", pattern: '\d{1,2}', 'data-player-name'=> player.name,  'data-player-id'=> player.id, 'data-team-id'=> player.team_id}
            .player_name= player.name
          .col-md-4
            .row
              .col-md-2.btn-group-vertical{role: 'group'}
                .btn-group-xs{role: 'group', style: 'display:none'}
                  %button.btn.btn-default.sub_points{'data-player-id'=> player.id, 'data-points'=> 1, 'data-courtside'=>'visit'} -F
                  %button.btn.btn-default.sub_points{'data-player-id'=> player.id, 'data-points'=> 2, 'data-courtside'=>'visit'} -2
                  %button.btn.btn-default.sub_points{'data-player-id'=> player.id, 'data-points'=> 3, 'data-courtside'=>'visit'} -3
              .col-md-5.col-md-offset-1
                .dashboard_labels
                  %center
                    Points
                    .player_points
                      %div{'data-points'=> 0, id: "points_player_#{player.id}"} 0
              .col-md-2.btn-group-vertical{role: 'group'}
                .btn-group-xs{role: 'group'}
                  %button.btn.btn-default.add_points{'data-player-id'=> player.id, 'data-points'=> 1, 'data-courtside'=>'visit'} +F
                  %button.btn.btn-default.add_points{'data-player-id'=> player.id, 'data-points'=> 2, 'data-courtside'=>'visit'} +2
                  %button.btn.btn-default.add_points{'data-player-id'=> player.id, 'data-points'=> 3, 'data-courtside'=>'visit'} +3
          .col-md-3
            .row
              .col-md-2
                .btn-group-xs
                  %button.btn.btn-default.sub_visit_player_foul{'data-player-id'=> player.id} -1
              .col-md-5.col-md-offset-1
                .dashboard_labels
                  %center
                    Fouls
                    .player_fouls
                      %div{'data-fouls'=> 0, id: "fouls_player_#{player.id}"} 0
              .col-md-2
                .btn-group-xs
                  %button.btn.btn-default.add_visit_player_foul{'data-player-id'=> player.id} +1

.modal.fade.bs-example-modal-lg{id:'change_player'}
  .modal-dialog
    .modal-content
      .modal-header
        %button.close{type:"button", 'data-dismiss'=>"modal", 'aria-label'=>"Close"}
          %span{'aria-hidden'=>"true"}
            &times;
        %h4.modal-title Change Player
      .modal-body
        %table.table.table-striped.table-bordered.table-hover.table-condensed.table-responsive

.modal.fade.bs-example-modal-lg{id:'stats'}
  .modal-dialog
    .modal-content
      .modal-header
        %button.close{type:"button", 'data-dismiss'=>"modal", 'aria-label'=>"Close"}
          %span{'aria-hidden'=>"true"}
            &times;
        %h4.modal-title Game Stats
      .modal-body
        %table.table.table-striped.table-bordered.table-hover.table-condensed.table-responsive
          %thead
            %td Team
            %td Player
            %td Period
            %td Event
            %td Count
          %tbody

:javascript
  //var count = 30;
  var mins = 10; //Set the number of minutes you need
  var secs = mins * 60;
  var currentSeconds = 0;
  var currentMinutes = 10;
  var isPaused = true;
  //TODO: The following should be in its own object
  var game_id = $('.navbar-fixed-top').attr('id')
  var currentPeriod = 1;
  var homeFouls = 0;
  var visitFouls = 0;
  var homeTO = 0;
  var visitTO = 0;
  var homePoints = 0;
  var visitPoints = 0;
  var Players = {}

  var snd = new Audio("/sounds/buzzer.mp3"); // buffers automatically when created

  var counter = setInterval(timer, 1000); //1000 will  run it every 1 second

  function resetClock(){
    mins = 10; //Set the number of minutes you need
    secs = mins * 60;
    currentSeconds = 0;
    currentMinutes = 10;
    isPaused = true;
    counter = setInterval(timer, 1000); //1000 will  run it every 1 second

    if (currentSeconds <= 9) currentSeconds = "0" + currentSeconds;
    if (currentMinutes <= 9) currentMinutes = "0" + currentMinutes;
    document.getElementById("timer").innerHTML = currentMinutes + ":" + currentSeconds; //Set the element id you need the time put into.
    $('.play').show();
  }

  function timer() {
    if(!isPaused){
      currentMinutes = Math.floor(secs / 60);
      currentSeconds = secs % 60;
      if (currentSeconds <= 9) currentSeconds = "0" + currentSeconds;
      if (currentMinutes <= 9) currentMinutes = "0" + currentMinutes;
      secs--;
      document.getElementById("timer").innerHTML = currentMinutes + ":" + currentSeconds; //Set the element id you need the time put into.
      if (secs < 0) {
        clearInterval(counter);
        snd.currentTime = 0;
        snd.play();
        resetClock();
        return;
      }
    }
  }

  //with jquery
  $('.pause').on('click', function(e) {
    e.preventDefault();
    isPaused = true;
    $('.play').show();
    $('.minus_sec').show();
    $('.plus_sec').show();
    $(this).hide();
  });

  $('.play').on('click', function(e) {
    e.preventDefault();
    isPaused = false;
    $('.pause').show();
    $('.minus_sec').hide();
    $('.plus_sec').hide();
    $(this).hide();
  });

  $('.minus_sec').on('click', function(e) {
    e.preventDefault();
    if(secs>=2){
      secs--;
      currentMinutes = Math.floor(secs / 60);
      currentSeconds = secs % 60;
      if (currentSeconds <= 9) currentSeconds = "0" + currentSeconds;
      if (currentMinutes <= 9) currentMinutes = "0" + currentMinutes;
      document.getElementById("timer").innerHTML = currentMinutes + ":" + currentSeconds; //Set the element id you need the time put into.
    }
  });

  $('.plus_sec').on('click', function(e) {
    e.preventDefault();
    secs++;
    currentMinutes = Math.floor(secs / 60);
    currentSeconds = secs % 60;
    if (currentSeconds <= 9) currentSeconds = "0" + currentSeconds;
    if (currentMinutes <= 9) currentMinutes = "0" + currentMinutes;
    document.getElementById("timer").innerHTML = currentMinutes + ":" + currentSeconds; //Set the element id you need the time put into.
  });

  $('.plus_period').on('click', function(e) {
    e.preventDefault();
    currentPeriod++;
    var cp = $('#period');
    cp.text(currentPeriod);
  });

  $('.minus_period').on('click', function(e) {
    e.preventDefault();
    if(currentPeriod>=2){
      currentPeriod--;
      var cp = $('#period');
      cp.text(currentPeriod);
    }
  });

  $('.reset_fouls').on('click', function(e){
    if(confirm("Reset foul counters?")){
      homeFouls = 0;
      visitFouls = 0;
      $('#visit_fouls, #home_fouls').text('0')
    }
  })

  $('.horn').on('click', function(e){
    snd.currentTime = 6;
    snd.play();
    int = setInterval(function() {
        if (snd.currentTime > 7) {
            snd.pause();
            clearInterval(int);
        }
    }, 10);
  })

  function toggleIndicator(e){
    if(e.hasClass('dashboard_indicator_on')){
      e.removeClass('dashboard_indicator_on')
      e.addClass('dashboard_indicator_off')
    } else {
      e.removeClass('dashboard_indicator_off')
      e.addClass('dashboard_indicator_on')
    }
  }

  $('span>a[class*="glyphicon-arrow"]').on('click', function(e){
    if($(this).parent().hasClass('bonus')){
      $('.bonus>a').each(function(obj, i){
        toggleIndicator($(this))
      })
    }
    if($(this).parent().hasClass('poss')){
      $('.poss>a').each(function(obj, i){
        toggleIndicator($(this))
      })
    }
  })

  $('.add_home_player_foul').on('click', function(){
    player_id = $(this).attr('data-player-id');
    if(Players[player_id]!==undefined){
      homeFouls++
      var hf = $('#home_fouls')
      hf.text(homeFouls)
      var p = $('#fouls_player_'+player_id)
      var pf = p.attr('data-fouls')
      pf++
      p.attr('data-fouls', pf)
      p.text(pf)
      Players[player_id].addFoul(game_id, currentPeriod)
    }
  })

  $('.sub_home_player_foul').on('click', function(){
    player_id = $(this).attr('data-player-id');
    if(Players[player_id]!==undefined){
      var p = $('#fouls_player_'+player_id)
      var pf = p.attr('data-fouls')
      if(pf>0){
        pf--
        if(homeFouls>0)
          homeFouls--
      }
      var hf = $('#home_fouls')
      hf.text(homeFouls)
      p.attr('data-fouls', pf)
      p.text(pf)
      Players[player_id].removeFoul()
    }
  })

  $('.add_visit_player_foul').on('click', function(){
    player_id = $(this).attr('data-player-id');
    if(Players[player_id]!==undefined){
      visitFouls++
      var hf = $('#visit_fouls')
      hf.text(visitFouls)
      var p = $('#fouls_player_'+player_id)
      var pf = p.attr('data-fouls')
      pf++
      p.attr('data-fouls', pf)
      p.text(pf)
      Players[player_id].addFoul(game_id, currentPeriod)
    }
  })

  $('.sub_visit_player_foul').on('click', function(){
    player_id = $(this).attr('data-player-id');
    if(Players[player_id]!==undefined){
      var p = $('#fouls_player_'+player_id)
      var pf = p.attr('data-fouls')
      if(pf>0){
        pf--
        if(visitFouls>0)
          visitFouls--
      }
      var hf = $('#visit_fouls')
      hf.text(visitFouls)
      p.attr('data-fouls', pf)
      p.text(pf)
      Players[player_id].removeFoul()
    }
  })

  //Change player
  $('.glyphicon-retweet').on('click', function(){
    var player_out = $(this).attr('data-player-id')
    var modalObj= $('#change_player.bs-example-modal-lg .modal-body table')
    modalObj.empty()
    for(id in Players){
      if(parseInt(Players[id].team_id)==parseInt($(this).attr('data-team-id'))){
        if(Players[id].status==="bench"){
          modalObj.append('<tr><td>'+
                          Players[id].name+'</td><td class="player_points" style="color:green;font-size:1.2em">'+
                          Players[id].points+'</td><td class="player_points" style="color:red;font-size:1.2em">'+
                          Players[id].fouls+'</td><td><button class="button-warning change" data-in="'+id+'" data-out="'+player_out+'">'+
                          Players[id].number+'</button></td></tr>')
        }
      }
    }
  })

  //Sent to bench
  $('.glyphicon-transfer').on('click', function(){
    var player_id = $(this).attr('data-player-id')
    var playerObj = $('#'+player_id)
    var ingame = $(this).parent().parent().parent().find('.player_well:visible').length
    if(ingame>5){
      playerObj.fadeToggle()
      $(this).siblings('.glyphicon-check').remove()
      $(this).remove()
      Players[player_id].setOnBench()
    } else {
      alert('5 players in game only')
    }
  })

  //Playing
  $('.glyphicon-check').on('click', function(){
    var playerObj = $(this).parent().parent()
    var player_id = playerObj.attr('id')
    //var ingame = $(this).parent().parent().parent().find('.player_well:visible').length
    if(Players[player_id]!==undefined){
      $(this).siblings('.glyphicon-transfer').remove()
      $(this).remove()
      Players[player_id].setInGame()
    } else {
      alert('Set up player number first')
    }
  })

  $('.add_points').on('click', function(){
    var player_id = $(this).attr('data-player-id')
    if(Players[player_id]!==undefined){
      var points = parseInt($(this).attr('data-points'))
      var courtside = $(this).attr('data-courtside')
      var currentTeamScoreObj
      if(courtside=='home'){
        homePoints+=points
        currentTeamScoreObj = $('#score_home')
      } else if(courtside=='visit'){
        visitPoints+=points
        currentTeamScoreObj= $('#score_visit')
      }
      var current_points = parseInt(currentTeamScoreObj.attr('data-value'))
      current_points += points;

      currentTeamScoreObj.attr('data-value', current_points)
      if(current_points<=9)
        current_points = '0'+current_points
      currentTeamScoreObj.text(current_points)

      Players[player_id].addPoints(points, game_id, currentPeriod)
      //Get the player's points obj
      var playerPointsObj = $('#points_player_'+player_id)
      //Update the UI
      playerPointsObj.attr('data-points', Players[player_id].points)
      playerPointsObj.text(Players[player_id].points)
    }
  })

  function Player(id, name, team_id, number){
    this.id = id
    this.name = name
    this.number = number || 'empty'
    this.points = 0
    this.fouls = 0
    this.status = 'bench'
    this.team_id = team_id
    this.init = function(id, name, team_id, number) {
      this.id = id
      this.name = name
      this.number = number || 'empty'
      this.team_id = team_id
      return this
    }
    this.setNumber = function(newNumber){ this.number = newNumber }
    this.addPoints = function(newPoints, game, period) {
      $.ajax({
        url:"/game_logs.json",
        method: "POST",
        data: { game_log: {
          game_id :game,
          player_id: this.id,
          event: 0,
          count: newPoints,
          period: period
        }},
        dataType: "json",
        success: function(){
          console.log('Points record created!')
          this.points += newPoints
        },
        error: function(e){
          alert('Could not save points in log!!')
        }
      })
    }
    this.addFoul = function(game, period) {
      $.ajax({
        url:"/game_logs.json",
        method: "POST",
        data: { game_log: {
          game_id :game,
          player_id: this.id,
          event: 1,
          count: 1,
          period: period
        }},
        dataType: "json",
        success: function(){
          console.log('Foul record created!')
          this.fouls++
        },
        error: function(e){
          alert('Could not save fouls in log!!')
        }
      })
    }
    this.removePoints = function(newPoints) { this.points -= newPoints}
    this.removeFoul = function() { this.fouls--}
    this.setInGame = function() { this.status = 'playing'}
    this.setOnBench = function() { this.status = 'bench'}
  }

  $('input.player_number').on('keyup', function(e) {
    if (e.which == 13 || e.keyCode == 13) {
      var player_id = $(this).attr('data-player-id')
      var team_id = $(this).attr('data-team-id')
      if(player_id!==undefined && player_id!==null && team_id!==undefined && team_id!==null){
        if(Players[player_id]!==undefined && Players[player_id]!==null){
          Players[player_id].setNumber($(this).val())
          $(this).prop('disabled', true);
        }else{
          var player_name = $(this).attr('data-player-name')
          if(player_name!==undefined && player_name!==null){
            var newPlayer = new Player(player_id, player_name, team_id, $(this).val())
            Players[player_id] = newPlayer
            $(this).prop('disabled', true)
          }else
            alert('An error ocurred: No player name')
        }
      } else
        alert('An error ocurred: Could not get player id')
    }
    e.preventDefault()
  });

  $('.player_well').one('mouseenter', function(e){
    player_id = $(this).attr('id')
    player_name = $(this).attr('data-player-name')
    team_id = $(this).attr('data-team-id')
    var newPlayer = new Player(player_id, player_name, team_id)
    Players[player_id] = newPlayer
  })

  $('#change_player .modal-body table').on('click', '.change', function(e){
    var player_in = $(this).attr('data-in')
    var player_out = $(this).attr('data-out')
    Players[player_in].setInGame()
    $('#'+player_in).fadeToggle()
    Players[player_out].setOnBench()
    $('#'+player_out).fadeToggle()
    $('#change_player.modal').modal('hide')
    e.preventDefault()
  })

  $('#stats').on('shown.bs.modal', function(e){
    $.ajax({
      url: "/game_logs/game/"+game_id+".json",
      success: function(response){
        var table_body = $('#stats .modal-body table.table tbody')
        table_body.empty()
        $.each(response, function(i, item) {
          table_body.append('<tr>'+
          '<td>'+item.team+'</td>'+
          '<td>'+item.player+'</td>'+
          '<td>'+item.period+'</td>'+
          '<td>'+item.event+'</td>'+
          '<td>'+item.count+'</td></tr>')
        })
      }
    })
  })
